# bot.py
import asyncio
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)

# ====================
# ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞: ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ü‡ßç‡¶∞‡¶ø‡¶ó‡¶æ‡¶∞/‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏ ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¨‡¶¶‡¶≤‡ßá ‡¶®‡¶æ‡¶ì
# ====================
TRIGGERS = {
    "‡¶π‡¶æ‡¶á": "‡¶π‡¶æ‡¶á! ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßã? üôÇ",
    "hello": "Hi! How can I help?",
    "help": "‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡¶ü‡ßã‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø‡¶ï ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¨‡¶ü ‚Äî ‡¶ï‡ßã‡¶® ‡¶ï‡¶ø‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶¶‡¶ø‡¶≤‡ßá ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶∏‡ßá‡¶ü‡¶æ ‡¶¨‡¶≤‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§",
    "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶": "‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶! ‚ù§Ô∏è",
    "thanks": "You‚Äôre welcome! üòä",
}

WELCOME_MSG = "‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ {name}! ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡ßá‡ßü‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶‡•§"

# ====================
# TOKEN ‚Äî BotFather ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡ßá‡¶Ø‡¶º‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¨‡¶∏‡¶æ‡¶ì ‡¶¨‡¶æ ‡¶™‡¶∞‡¶ø‡¶¨‡ßá‡¶∂ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßã
# ====================
import os
TOKEN = os.environ.get("7899188333:AAHn_qKNizVrdt9ubypjjrNIw-DtqGDAE3A") or "7899188333:AAHn_qKNizVrdt9ubypjjrNIw-DtqGDAE3A"
# ====================


async def start_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.effective_chat.send_message("‡¶¨‡¶ü ‡¶Ö‡¶® ‚Äî ‡¶Ü‡¶Æ‡¶ø ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ö‡¶ü‡ßã-‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¶‡ßá‡¶¨‡•§")


async def welcome_new_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.new_chat_members:
        for member in update.message.new_chat_members:
            if member.is_bot:
                continue
            name = member.full_name
            await update.effective_chat.send_message(WELCOME_MSG.format(name=name))


async def auto_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message
    if not msg or not msg.text:
        return

    # ignore other bots
    if msg.from_user and msg.from_user.is_bot:
        return

    text = msg.text.lower()

    # ‡ßß) ‡¶ï‡¶ø‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°-‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á
    for trigger, reply in TRIGGERS.items():
        if trigger.lower() in text:
            try:
                await msg.reply_text(reply)
            except Exception:
                pass
            return

    # ‡ß®) ‡¶Ø‡¶¶‡¶ø ‡¶¨‡¶ü‡¶ï‡ßá ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º (‡¶Ø‡¶¶‡¶ø username ‡¶â‡¶™‡¶∏‡ßç‡¶•‡¶ø‡¶§ ‡¶•‡¶æ‡¶ï‡ßá)
    try:
        bot_username = (await context.bot.get_me()).username
    except Exception:
        bot_username = None

    if bot_username and f"@{digital1_group_bot.lower()}" in text:
        await msg.reply_text("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶°‡¶æ‡¶ï‡¶≤‡ßá‡¶®? ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?")

    # (‡¶Ü‡¶∞‡¶ì ‡¶≤‡¶ú‡¶ø‡¶ï ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶Ø‡ßá‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá: ‡¶ï‡ßã‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á, ‡¶°‡¶ø‡¶è‡¶Æ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø)


def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start_cmd))
    app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, welcome_new_member))
    # ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), auto_reply))

    print("Bot started...")
    app.run_polling(allowed_updates=["message", "edited_message", "chat_member"])


if __name__ == "__main__":
    main()